##############################################################
# activity 9 test submission
##############################################################
#! /bin/bash
##############

read -p "enter the filename:" file
if          [[ -f ${file} ]]

then
         echo "ERROR File exists "
exit 1
else
        `touch $file ~/$`
         echo "file $file has been created. "
fi

exit 0



##############################################################
# activity 5 test submission
##############################################################

#! /bin/bash

###############

echo 12345 | rev
54321



##############################################################
# activity 1 test submission
##############################################################

#! /bin/bash

###############

echo "Username is " `logname`
echo "Date is " `date`
echo "Time is " `date +"%r"`
echo "Current working directory is " `pwd`
echo "number of files in the directory is " `ls -lq | wc -l`
echo "Largest file in directory: $(du -ah | sort -rh | head -2 | tail -1)"



###########################################################
# Activity 4 test submission
###########################################################

count=`echo ${pass} | wc -c`
if [[ $count -le 8 ]];then

        echo "Password length should be 8 characters"
        exit 1

fi

echo $pass | grep "[A-Z]" | grep "[a-z]" | grep "[0-9]" | grep "[@Â£#$%^&*]"
####echo "$?"

if [[ $? -ne 0 ]];


then

echo "Password must contain uppercase ,lowercase,number and special character"

else
        echo "Password is strong"

fi

exit 2


#############################################################
# Activity 6 Test submission
#############################################################

#! /bin/sh
############################

#!/bin/bash


echo "Please enter the first number:"
read a

echo "Please enter the second number:"
read b
if ! [[ "$a" =~ ^[0-9]+$ ]]; then
    echo "Error: First input is not a number."
    exit 1
fi

if ! [[ "$b" =~ ^[0-9]+$ ]]; then
    echo "Error: Second input is not a number."
    exit 1
fi

if [ "$a" -gt "$b" ]; then
    echo "True"
else
    echo "False"
fi

diff=$(($a - $b))
echo "The difference between $a and $b is $diff."

######################################################
# Activity 3 part A test submission
#####################################################
#! /bin/sh
############################


numbers=($(shuf -i 1-50 -n 5 | tr '\n' ' '))
bonus=$(shuf -i 1-10 -n 1)


date=$(date +%Y%m%d)

echo "Lottery numbers for $date:" > lottery_$date.txt
echo "${numbers[@]}" >> lottery_$date.txt
echo "Bonus ball number: $bonus" >> lottery_$date.txt

############################################
# Activity 3 part B test submission
############################################
#! /bin/sh
############################

read -p "Please provide date of lottery to check? " $1
read $1

if [ $# -ne 1 ]; then
    echo "Error: Please provide the name of a lottery file to check."
    exit 1
fi


if [ ! -f "$1" ]; then
    echo "Error: File not found."
    exit 1
fi

numbers=$(tail -n 1 "$1" | awk '{print $NF}')
bonus=$(tail -n 1 "$1" | awk '{print $4}')

echo "Please enter your lottery numbers (separated by spaces):"
read -a user_numbers

matches=0
for num in "${user_numbers[@]}"
do
    if [[ " ${numbers[@]} " =~ " $num " ]]; then
        matches=$((matches + 1))
    fi
done

bonus_match="No"
if [ "$bonus" -eq "${user_numbers[-1]}" ]; then
    bonus_match="Yes"
fi

echo "Lottery numbers: ${numbers[@]}"
echo "Bonus ball number: $bonus"
echo "Your numbers: ${user_numbers[@]}"
echo "Matches: $matches"
echo "Bonus ball match: $bonus_match"

##########################################################
# Activity 7 test submission
##########################################################
#! /bin/sh
############################

questions=(
    "1. The root user has the highest level of access in Linux. (T/F)"
    "2. The shell is a program that interprets commands and acts as an interface between the user and the kernel. (T/F)"
    "3. The chmod command is used to change the ownership of a file or directory. (T/F)"
    "4. The cat command is used to display the contents of a file. (T/F)"
    "5. The mv command is used to move files and directories. (T/F)"
    "6. The ps command is used to display information about running processes. (T/F)"
    "7. The tar command is used to compress files and directories. (T/F)"
    "8. The ping command is used to test network connectivity. (T/F)"
    "9. The crontab command is used to schedule tasks to run automatically at specified times. (T/F)"
    "10. The grep command is used to search for text in files. (T/F)"
)
answers=("T" "T" "F" "T" "T" "T" "F" "T" "T" "T")

score=0
count=0
for question in "${questions[@]}"
do
    clear
    echo $question
    read -p "Answer (T/F): " choice

    if [[ "$choice" == "${answers[count]}" ]]; then
        echo "Correct!"
        score=$((score + 1))
    else
        echo "Incorrect."
    fi

    read -p "Press Enter to continue."
    count=$((count + 1))
done

clear
echo "Quiz complete! Your score is $score out of ${#questions[@]}."


###############################################################


